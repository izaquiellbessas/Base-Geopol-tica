/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arqtobd.view;

import arqtobd.controller.ConexaoBanco;
import arqtobd.dao.DAOCidade;
import arqtobd.model.ModelArquivoDeRegristros;
import arqtobd.model.ModelCidade;
import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author izaquiellbessas
 */
public class main extends javax.swing.JFrame {

    private ConexaoBanco conexao;
    private Connection conn;
    private File arquivoRegistros;
    private ModelArquivoDeRegristros modeloArquivoRegistros;

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlConexaoBD = new javax.swing.JPanel();
        jlblDrive = new javax.swing.JLabel();
        jlblURL = new javax.swing.JLabel();
        jlblUsuario = new javax.swing.JLabel();
        jlblSenha = new javax.swing.JLabel();
        jtxtUsuario = new javax.swing.JTextField();
        jtxtDrive = new javax.swing.JTextField();
        jtxtURL = new javax.swing.JTextField();
        jpsswdSenha = new javax.swing.JPasswordField();
        jlblStatus = new javax.swing.JLabel();
        jbtnConectar = new javax.swing.JButton();
        jlblIndicaStatus = new javax.swing.JLabel();
        jlblNomeBD = new javax.swing.JLabel();
        jtxtNomeBD = new javax.swing.JTextField();
        jlblPorta = new javax.swing.JLabel();
        jtxtPorta = new javax.swing.JTextField();
        jpnlInsercaoAutomatica = new javax.swing.JPanel();
        jlblInserirRegistrosDoArquivo = new javax.swing.JLabel();
        jtxtCaminhoArquivoComRegistros = new javax.swing.JTextField();
        jbtnProcurarArquivoComRegistros = new javax.swing.JButton();
        jlblTabelas = new javax.swing.JLabel();
        jcmbTabelas = new javax.swing.JComboBox();
        jbtnProcessar = new javax.swing.JButton();
        jlblSelecionarPadrao = new javax.swing.JLabel();
        jbtnSelecionarPadrao = new javax.swing.JButton();
        jprgsColetivo = new javax.swing.JProgressBar();
        jprgsIndividual = new javax.swing.JProgressBar();
        jlblProgressoIndividual = new javax.swing.JLabel();
        jlblProgressoColetivo = new javax.swing.JLabel();
        jscrllArquivoDeRegristros = new javax.swing.JScrollPane();
        jtxtareaRegistros = new javax.swing.JTextArea();
        jscrllInsercoesSQL = new javax.swing.JScrollPane();
        jtxtareaInsercoesSQL = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Three Software House - ArqToBD - Inserção Autmática de Registros em um banco de dados a partir de arquivos");

        jpnlConexaoBD.setBorder(javax.swing.BorderFactory.createTitledBorder("Conexão com o banco de dados"));
        jpnlConexaoBD.setName("panelConexaoBD"); // NOI18N

        jlblDrive.setText("Drive:");

        jlblURL.setText("URL:");

        jlblUsuario.setText("Usuário:");

        jlblSenha.setText("Senha:");

        jtxtUsuario.setText("root");

        jtxtDrive.setText("com.mysql.jdbc.Driver");

        jtxtURL.setText("jdbc:mysql://localhost");

        jpsswdSenha.setText("root");

        jlblStatus.setText("Status da conexão:");

        jbtnConectar.setText("Conectar");
        jbtnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConectarActionPerformed(evt);
            }
        });

        jlblIndicaStatus.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jlblIndicaStatus.setForeground(java.awt.Color.red);
        jlblIndicaStatus.setText("Off");
        jlblIndicaStatus.setName("lblIndicaStatus"); // NOI18N

        jlblNomeBD.setText("Nome do banco de dados:");

        jlblPorta.setText("Porta:");

        jtxtPorta.setText("3306");

        javax.swing.GroupLayout jpnlConexaoBDLayout = new javax.swing.GroupLayout(jpnlConexaoBD);
        jpnlConexaoBD.setLayout(jpnlConexaoBDLayout);
        jpnlConexaoBDLayout.setHorizontalGroup(
            jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlConexaoBDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlConexaoBDLayout.createSequentialGroup()
                        .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlblDrive)
                            .addComponent(jlblURL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtURL, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                            .addComponent(jtxtDrive)))
                    .addGroup(jpnlConexaoBDLayout.createSequentialGroup()
                        .addComponent(jlblNomeBD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtNomeBD)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblUsuario)
                    .addComponent(jlblSenha)
                    .addComponent(jlblPorta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlConexaoBDLayout.createSequentialGroup()
                        .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtUsuario)
                            .addComponent(jpsswdSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlConexaoBDLayout.createSequentialGroup()
                                .addComponent(jlblStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlblIndicaStatus))
                            .addComponent(jbtnConectar)))
                    .addComponent(jtxtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpnlConexaoBDLayout.setVerticalGroup(
            jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlConexaoBDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblDrive)
                    .addComponent(jlblUsuario)
                    .addComponent(jtxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtDrive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnConectar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblURL)
                    .addComponent(jlblSenha)
                    .addComponent(jtxtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpsswdSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblStatus)
                    .addComponent(jlblIndicaStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlConexaoBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNomeBD)
                    .addComponent(jtxtNomeBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblPorta)
                    .addComponent(jtxtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlblIndicaStatus.getAccessibleContext().setAccessibleName("lblIndicaStatus");

        jpnlInsercaoAutomatica.setBorder(javax.swing.BorderFactory.createTitledBorder("Inserção automática"));

        jlblInserirRegistrosDoArquivo.setText("Inserir registros automaticamente a partir de:");

        jbtnProcurarArquivoComRegistros.setText("...");
        jbtnProcurarArquivoComRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProcurarArquivoComRegistrosActionPerformed(evt);
            }
        });

        jlblTabelas.setText("na tabela:");

        jcmbTabelas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cidades", "NCM", "CFOP" }));

        jbtnProcessar.setText("Processar");
        jbtnProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProcessarActionPerformed(evt);
            }
        });

        jlblSelecionarPadrao.setText("seguindo o seguinte padrão para inserção:");

        jbtnSelecionarPadrao.setBackground(java.awt.SystemColor.control);
        jbtnSelecionarPadrao.setForeground(new java.awt.Color(0, 48, 255));
        jbtnSelecionarPadrao.setText("Selecionar Padrão");
        jbtnSelecionarPadrao.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jbtnSelecionarPadrao.setBorderPainted(false);
        jbtnSelecionarPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSelecionarPadraoActionPerformed(evt);
            }
        });

        jlblProgressoIndividual.setText("Progresso Individual/Registro:");

        jlblProgressoColetivo.setText("Progresso Coletivo/Arquivo:");

        jtxtareaRegistros.setColumns(20);
        jtxtareaRegistros.setRows(5);
        jscrllArquivoDeRegristros.setViewportView(jtxtareaRegistros);

        jtxtareaInsercoesSQL.setColumns(20);
        jtxtareaInsercoesSQL.setRows(5);
        jscrllInsercoesSQL.setViewportView(jtxtareaInsercoesSQL);

        javax.swing.GroupLayout jpnlInsercaoAutomaticaLayout = new javax.swing.GroupLayout(jpnlInsercaoAutomatica);
        jpnlInsercaoAutomatica.setLayout(jpnlInsercaoAutomaticaLayout);
        jpnlInsercaoAutomaticaLayout.setHorizontalGroup(
            jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                                .addComponent(jlblTabelas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcmbTabelas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jlblInserirRegistrosDoArquivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                                .addComponent(jtxtCaminhoArquivoComRegistros)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnProcurarArquivoComRegistros))
                            .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                                .addComponent(jlblSelecionarPadrao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnSelecionarPadrao, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnProcessar))))
                    .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                        .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jscrllArquivoDeRegristros, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                            .addComponent(jprgsIndividual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblProgressoIndividual, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlblProgressoColetivo)
                            .addComponent(jprgsColetivo, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jscrllInsercoesSQL))))
                .addContainerGap())
        );
        jpnlInsercaoAutomaticaLayout.setVerticalGroup(
            jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlInsercaoAutomaticaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblInserirRegistrosDoArquivo)
                    .addComponent(jtxtCaminhoArquivoComRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnProcurarArquivoComRegistros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblTabelas)
                    .addComponent(jcmbTabelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnProcessar)
                    .addComponent(jlblSelecionarPadrao)
                    .addComponent(jbtnSelecionarPadrao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscrllArquivoDeRegristros, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .addComponent(jscrllInsercoesSQL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblProgressoIndividual, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblProgressoColetivo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlInsercaoAutomaticaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jprgsColetivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jprgsIndividual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnlConexaoBD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnlInsercaoAutomatica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnlConexaoBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlInsercaoAutomatica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpnlConexaoBD.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConectarActionPerformed
        try {
            String senha = new String(this.jpsswdSenha.getPassword());

            conexao = new ConexaoBanco(this.jtxtDrive.getText(), this.jtxtURL.getText() + ":" + this.jtxtPorta.getText() + "/", this.jtxtNomeBD.getText(), this.jtxtUsuario.getText(), senha);
            conn = (Connection) conexao.getConexao();
            if (!conn.isClosed()) {
                this.jlblIndicaStatus.setText("On");
                this.jlblIndicaStatus.setForeground(Color.green);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            this.jlblIndicaStatus.setText("Off");
            this.jlblIndicaStatus.setForeground(Color.red);

            JOptionPane.showMessageDialog(rootPane, ex, "Atenção: a conexão com o banco de dados não pode ser estabelecida!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnConectarActionPerformed

    private void jbtnProcurarArquivoComRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProcurarArquivoComRegistrosActionPerformed
        JFileChooser janelaEscolheArquivo = new JFileChooser();
        janelaEscolheArquivo.showOpenDialog(janelaEscolheArquivo);

        this.jtxtCaminhoArquivoComRegistros.setText(janelaEscolheArquivo.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jbtnProcurarArquivoComRegistrosActionPerformed

    private void jbtnProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProcessarActionPerformed
        arquivoRegistros = new File(this.jtxtCaminhoArquivoComRegistros.getText());

        if (this.jcmbTabelas.getItemAt(this.jcmbTabelas.getSelectedIndex()).toString().contains("Cidades")) {
            try {
                DAOCidade dao = new DAOCidade(this.conn);
                String conteudoRegistro = "";
                BufferedReader bufferArq = new BufferedReader(new InputStreamReader(new FileInputStream(arquivoRegistros), "UTF-8"));

                this.jprgsColetivo.setMaximum((int) new BufferedReader(new InputStreamReader(new FileInputStream(arquivoRegistros), "UTF-8")).lines().count());
                this.jprgsIndividual.setMaximum(3);

                while (bufferArq.ready()) {
                    conteudoRegistro += bufferArq.readLine() + '\n';
                    this.jprgsColetivo.setValue(this.jprgsColetivo.getValue() + 1);

                    this.jprgsIndividual.setValue(1);
                    String municipio = "";
                    for (int i = 0; i < conteudoRegistro.length(); i++) {
                        if (!Character.isDigit(conteudoRegistro.charAt(i))) {
                            municipio += conteudoRegistro.charAt(i);
                        } else {
                            break;
                        }
                    }
                    String codigoIBGE = (String) conteudoRegistro.subSequence(municipio.length(), municipio.length() + 7);

                    String Registro = municipio + "|" + codigoIBGE + "|" + codigoIBGE.substring(0, 2);
                    String SQL = "INSERT INTO Cidades (nome, codigoIBGE, fkEstado) VALUES(" + municipio + "," + codigoIBGE + "," + codigoIBGE.substring(0, 2) + ");";
                    this.jtxtareaRegistros.append(Registro + "\n");
                    this.jtxtareaInsercoesSQL.append(SQL + "\n");

                    this.jprgsIndividual.setValue(2);
                    ModelCidade modeloCidade = new ModelCidade();
                    modeloCidade.setNome(municipio);
                    modeloCidade.setCodIBGE(Integer.parseInt(codigoIBGE));
                    modeloCidade.setFk_estado(Integer.parseInt(codigoIBGE.substring(0, 2)));

                    dao.ins(conn, modeloCidade);

                    this.jprgsIndividual.setValue(3);

                    conteudoRegistro = "";
                    this.jprgsColetivo.setValue(0);
                    this.jprgsIndividual.setValue(0);

                    this.repaint();
                }
            } catch (SQLException ex) {
                this.jtxtareaRegistros.append("ERROR\n");
                this.jtxtareaInsercoesSQL.append(ex + "\n");
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                this.jtxtareaRegistros.append(ex + "\n");
                this.jtxtareaInsercoesSQL.append("ERROR\n");
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                this.jtxtareaRegistros.append(ex + "\n");
                this.jtxtareaInsercoesSQL.append("ERROR\n");
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                this.jtxtareaRegistros.append(ex + "\n");
                this.jtxtareaInsercoesSQL.append("ERROR\n");
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        this.repaint();
    }//GEN-LAST:event_jbtnProcessarActionPerformed

    private void jbtnSelecionarPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSelecionarPadraoActionPerformed
        layoutArquivoRegistros layout = new layoutArquivoRegistros(this);
        layout.setVisible(true);
    }//GEN-LAST:event_jbtnSelecionarPadraoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*UIManager.put("ProgressBar.background", Color.orange);
        UIManager.put("ProgressBar.foreground", Color.blue);
        UIManager.put("ProgressBar.selectionBackground", Color.red);
        UIManager.put("ProgressBar.selectionForeground", Color.green);*/

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnConectar;
    private javax.swing.JButton jbtnProcessar;
    private javax.swing.JButton jbtnProcurarArquivoComRegistros;
    private javax.swing.JButton jbtnSelecionarPadrao;
    private javax.swing.JComboBox jcmbTabelas;
    private javax.swing.JLabel jlblDrive;
    private javax.swing.JLabel jlblIndicaStatus;
    private javax.swing.JLabel jlblInserirRegistrosDoArquivo;
    private javax.swing.JLabel jlblNomeBD;
    private javax.swing.JLabel jlblPorta;
    private javax.swing.JLabel jlblProgressoColetivo;
    private javax.swing.JLabel jlblProgressoIndividual;
    private javax.swing.JLabel jlblSelecionarPadrao;
    private javax.swing.JLabel jlblSenha;
    private javax.swing.JLabel jlblStatus;
    private javax.swing.JLabel jlblTabelas;
    private javax.swing.JLabel jlblURL;
    private javax.swing.JLabel jlblUsuario;
    private javax.swing.JPanel jpnlConexaoBD;
    private javax.swing.JPanel jpnlInsercaoAutomatica;
    private javax.swing.JProgressBar jprgsColetivo;
    private javax.swing.JProgressBar jprgsIndividual;
    private javax.swing.JPasswordField jpsswdSenha;
    private javax.swing.JScrollPane jscrllArquivoDeRegristros;
    private javax.swing.JScrollPane jscrllInsercoesSQL;
    private javax.swing.JTextField jtxtCaminhoArquivoComRegistros;
    private javax.swing.JTextField jtxtDrive;
    private javax.swing.JTextField jtxtNomeBD;
    private javax.swing.JTextField jtxtPorta;
    private javax.swing.JTextField jtxtURL;
    private javax.swing.JTextField jtxtUsuario;
    private javax.swing.JTextArea jtxtareaInsercoesSQL;
    private javax.swing.JTextArea jtxtareaRegistros;
    // End of variables declaration//GEN-END:variables

    public ModelArquivoDeRegristros getModeloArquivoRegistros() {
        return modeloArquivoRegistros;
    }

    public void setModeloArquivoRegistros(ModelArquivoDeRegristros modeloArquivoRegistros) {
        this.modeloArquivoRegistros = modeloArquivoRegistros;
    }
}
